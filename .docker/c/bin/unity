#! /bin/sh -eu

main ()
{
    RESULT_DIR=`mktemp -d`

    executeTestSuite || :

    renderResultSummary "${RESULT_DIR}" || :

    rm -r "${RESULT_DIR}"

    return ${EXIT_CODE}
}

executeTestSuite ()
{
    EXIT_CODE=0

    test x"" != x"${TEST_DIRECTORIES}" || {
        return
    }
    test x"" != x"${TEST_SUFFIXES}" || {
        return
    }

    rm -rf "${BUILD_DIRECTORY}" &&
    mkdir -p "${BUILD_DIRECTORY}" &&

    cp -r "${SOURCE_DIRECTORY}" "${BUILD_DIRECTORY}" &&
    find "${BUILD_DIRECTORY}" -type f ! -name '*.h' -delete &&

    for a_testdir in ${TEST_DIRECTORIES};
    do
        for a_testsuffix in ${TEST_SUFFIXES};
        do
            for a_path in ${a_testdir}/*${a_testsuffix};
            do
                progressAdvance &&

                buildAndExecuteSourceTestFile "${a_path}" || EXIT_CODE=$?
            done
        done
    done

    return ${EXIT_CODE}
}

progressAdvance ()
{
    progressAdvance_total=${progressAdvance_total=0}

    if test x"80" = x"${progressAdvance_total}"; then
        progressAdvance_total=0

        echo
    else :; fi

    /bin/echo -n .

    progressAdvance_total=`expr 1 \+ "${progressAdvance_total}"`
}

renderResultSummary ()
{
    ruby "${UNITY_ROOT}/auto/unity_test_summary.rb" "$1"
}

buildAndExecuteSourceTestFile ()
{
    b_path=$1

    testPathToRunner "${b_path}" &&
    ensureDirectoryExists "${c_runner}" &&

    makeRunner "${b_path}" "${c_runner}" &&

    buildAndExecuteTestWithRunner "${b_path}" "${c_runner}"
}

testPathToRunner ()
{
    c_path=$1

    c_runner=`echo "${c_path}" | sed -E 's,(\.\w+)?$,Runner\1,'` &&
    c_runner="${BUILD_DIRECTORY}/${c_runner}"
}

ensureDirectoryExists ()
{
    d_filePath=$1

    mkdir -p `dirname "${d_filePath}"`
}

makeRunner ()
{
    e_sourceTest=$1
    e_outputPath=$2

    ruby "${UNITY_ROOT}/auto/generate_test_runner.rb" "${e_sourceTest}" "${e_outputPath}"
}

buildAndExecuteTestWithRunner ()
{
    f_sourceTest=$1
    f_sourceRunner=$2
    f_testProgram=`echo "${f_sourceRunner}" | sed -e 's,\.\w$,,'` &&

    clang \
        -I"${UNITY_ROOT}/src/" \
        -I"${UNITY_ROOT}/extras/memory/src/" \
        -o "${f_testProgram}" \
        "${UNITY_ROOT}/src/unity.c" \
        "${UNITY_ROOT}/extras/memory/src/unity_memory.c" \
        `findSourceFilesToCompile` \
        "${f_sourceTest}" \
        "${f_sourceRunner}" &&

    f_testresults=`mktemp -p"${RESULT_DIR}"`.testresults &&

    "${f_testProgram}" 2>&1 > "${f_testresults}"
}

findSourceFilesToCompile ()
{
    find "${SOURCE_DIRECTORY}" -type f -name '*.c' ! -name "*${TEST_SUFFIXES}"
}

main ${1+"$@"}
